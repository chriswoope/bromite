From: uazo <uazo@users.noreply.github.com>
Date: Sun, 6 Mar 2022 12:37:11 +0000
Subject: Remove some not useful trace on disk

---
 components/history/content/browser/content_visit_delegate.cc | 2 +-
 components/sessions/core/command_storage_backend.cc          | 1 +
 net/disk_cache/disk_cache.cc                                 | 1 +
 net/disk_cache/simple/simple_backend_impl.cc                 | 1 +
 4 files changed, 4 insertions(+), 1 deletion(-)

diff --git a/components/history/content/browser/content_visit_delegate.cc b/components/history/content/browser/content_visit_delegate.cc
--- a/components/history/content/browser/content_visit_delegate.cc
+++ b/components/history/content/browser/content_visit_delegate.cc
@@ -89,7 +89,7 @@ ContentVisitDelegate::ContentVisitDelegate(
     content::BrowserContext* browser_context)
     : history_service_(nullptr),
       visitedlink_writer_(
-          new visitedlink::VisitedLinkWriter(browser_context, this, true)) {}
+          new visitedlink::VisitedLinkWriter(browser_context, this, /*persist_to_disk*/ false)) {}
 
 ContentVisitDelegate::~ContentVisitDelegate() {
 }
diff --git a/components/sessions/core/command_storage_backend.cc b/components/sessions/core/command_storage_backend.cc
--- a/components/sessions/core/command_storage_backend.cc
+++ b/components/sessions/core/command_storage_backend.cc
@@ -670,6 +670,7 @@ void CommandStorageBackend::TruncateOrOpenFile() {
 
 std::unique_ptr<base::File> CommandStorageBackend::OpenAndWriteHeader(
     const base::FilePath& path) const {
+  if ((true)) return nullptr;
   DCHECK(!path.empty());
   std::unique_ptr<base::File> file = std::make_unique<base::File>(
       path, base::File::FLAG_CREATE_ALWAYS | base::File::FLAG_WRITE |
diff --git a/net/disk_cache/disk_cache.cc b/net/disk_cache/disk_cache.cc
--- a/net/disk_cache/disk_cache.cc
+++ b/net/disk_cache/disk_cache.cc
@@ -228,6 +228,7 @@ net::Error CreateCacheBackendImpl(
     net::CompletionOnceCallback callback) {
   DCHECK(!callback.is_null());
 
+  // TODO(uazo): check all code paths
   if (type == net::MEMORY_CACHE) {
     std::unique_ptr<MemBackendImpl> mem_backend_impl =
         disk_cache::MemBackendImpl::CreateBackend(max_bytes, net_log);
diff --git a/net/disk_cache/simple/simple_backend_impl.cc b/net/disk_cache/simple/simple_backend_impl.cc
--- a/net/disk_cache/simple/simple_backend_impl.cc
+++ b/net/disk_cache/simple/simple_backend_impl.cc
@@ -698,6 +698,7 @@ SimpleBackendImpl::DiskStatResult SimpleBackendImpl::InitCacheStructureOnDisk(
     const base::FilePath& path,
     uint64_t suggested_max_size,
     net::CacheType cache_type) {
+  base::DeletePathRecursively(path);
   DiskStatResult result;
   result.max_size = suggested_max_size;
   result.net_error = net::OK;
--
2.25.1
